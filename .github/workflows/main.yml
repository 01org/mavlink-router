name: Build and Test

on: [push, pull_request]

jobs:
  ubuntu:
    name: ubuntu-${{ matrix.distro }} ${{ matrix.name }}
    runs-on: ubuntu-${{ matrix.distro }}
    strategy:
      matrix:
        include:
          - name: armhf
            arch_name: linux-armv7
            distro: 18.04
          - name: arm64
            arch_name: linux-arm64
            distro: 18.04
            distro_name: bionic
          - name: amd64
            arch_name: linux-x64
            distro: 18.04
            distro_name: bionic
          - name: armhf
            arch_name: linux-armv7
            distro: 20.04
            distro_name: bionic
          - name: arm64
            arch_name: linux-arm64
            distro: 20.04
            distro_name: focal
          - name: amd64
            arch_name: linux-x64
            distro: 20.04
            distro_name: focal
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: recursive
      - name: install tools
        run: sudo apt-get install -y python3-pip python3-setuptools && pip3 install future pymavlink
      - name: setup dockcross
        run: docker run --rm dockcross/${{ matrix.arch_name }} > ./dockcross; chmod +x ./dockcross
      - name: configure
        run: ./dockcross /bin/bash -c "./autogen.sh c --with-systemdsystemunitdir=/usr/lib/systemd/system --host=arm"
      - name: build
        run: ./dockcross /bin/bash -c "make -j"
      - name: test
        run: ./dockcross /bin/bash -c "make check PYTHON=python3"
      - name: Rename
        run: cp mavlink-routerd mavlink-routerd-libc-${{ matrix.name }}
      - name: package-deb
        run: |
          mkdir -p .debpkg/usr/bin
          cp mavlink-routerd .debpkg/usr/bin/mavlink-routerd
          mkdir -p .debpkg/DEBIAN
          export VERSION=$([[ "${{ github.ref }}" == refs/tags/* ]] && echo $(echo ${{ github.ref }} | sed s#"refs/tags/v"##) || echo "0.0.0")
          export PKGSIZE=$(du mavlink-routerd)
          echo "Building mavlink-router version: ${VERSION}"
          cat > .debpkg/DEBIAN/control << EOL
          Package: mavlink-router
          Version: ${VERSION}
          Section: custom
          Priority: optional
          Architecture: ${{ matrix.name }}
          Essential: no
          Installed-Size: ${PKGSIZE}
          Maintainer: MAVLink-Router Developers
          Description: Route mavlink packets between endpoints
          EOL
          dpkg-deb --build .debpkg
          mv .debpkg.deb mavlink-router-ubuntu-${{ matrix.distro }}_${{ matrix.name }}.deb
      - uses: actions/upload-artifact@master
        with:
          path: mavlink-routerd-libc-${{ matrix.name }}
      - uses: actions/upload-artifact@master
        with:
          path: mavlink-router-ubuntu-${{ matrix.distro }}_${{ matrix.name }}.deb
      - uses: svenstaro/upload-release-action@v2
        name: Upload binaries to release
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: mavlink-routerd-libc-${{ matrix.name }}
          tag: ${{ github.ref }}
          prerelease: ${{ !startsWith(github.ref, 'refs/tags/v') }}
          overwrite: true
      - uses: svenstaro/upload-release-action@v2
        name: Upload .debs to release
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          path: mavlink-router-ubuntu-${{ matrix.distro }}_${{ matrix.name }}.deb
          tag: ${{ github.ref }}
          prerelease: ${{ !startsWith(github.ref, 'refs/tags/v') }}
          overwrite: true

  alpine-linux:
    name: alpine 3.11.6 (musl)
    runs-on: ubuntu-18.04
    container: alpine:3.11.6
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: recursive
      - name: install tools
        run: apk update && apk add autoconf automake build-base git libtool linux-headers openssl-dev perl-extutils-pkgconfig python3 && pip3 install future
      - name: configure
        run: ./autogen.sh && ./configure CFLAGS='-g -O2' --sysconfdir=/etc --localstatedir=/var --libdir=/usr/lib --disable-systemd --prefix=/usr
      - name: build
        run: make
      - name: Rename
        run: cp mavlink-routerd mavlink-routerd-musl-x86-64
      - uses: actions/upload-artifact@master
        with:
          path: mavlink-routerd-musl-x86-64
      - uses: svenstaro/upload-release-action@v2
        name: Upload binaries to release
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: mavlink-routerd-musl-x86-64
          tag: ${{ github.ref }}
          prerelease: ${{ !startsWith(github.ref, 'refs/tags/v') }}
          overwrite: true
